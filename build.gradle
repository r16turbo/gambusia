/*
 * Copyright (C) 2018 Issey Yamakoshi
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'eclipse'
    id 'java-library'
    id 'maven-publish'
    id 'biz.aQute.bnd.builder' version '4.1.0'
}

ext {
    title = 'Gambusia/MQTT'

    nettyVersion   = '4.1.13.Final'
    log4jVersion   = '2.11.1'
    junitVersion   = '5.3.2'
    assertjVersion = '3.11.1'
}

group = 'io.gambusia'
version = '0.21.1-SNAPSHOT'
description = 'Netty-based MQTT v3.1.1 lightweight client'

eclipse.classpath.file.whenMerged {
    entries.each {
        if (it in org.gradle.plugins.ide.eclipse.model.AbstractClasspathEntry
            && it.entryAttributes['gradle_used_by_scope'] == 'test') {
            it.entryAttributes['test'] = 'true'
        }
    }
}

dependencies {
    implementation platform("io.netty:netty-bom:${nettyVersion}")
    api('io.netty:netty-codec-mqtt')

    testImplementation platform("org.apache.logging.log4j:log4j-bom:${log4jVersion}")
    testImplementation platform("org.junit:junit-bom:${junitVersion}")
    testImplementation('org.apache.logging.log4j:log4j-api')
    testImplementation('io.netty:netty-handler')
    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testImplementation("org.assertj:assertj-core:${assertjVersion}")
    testRuntimeOnly('org.apache.logging.log4j:log4j-core')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
}

repositories {
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

jar {
    bnd (
        'Implementation-Title': title,
        'Implementation-Version': version,
        'Automatic-Module-Name': 'io.gambusia.mqtt',

        'Bundle-Name': title,
        'Bundle-SymbolicName': project.group,
        'Bundle-Description': project.description,
        'Bundle-DocURL': 'https://github.com/r16turbo/gambusia',
        'Bundle-License': 'http://www.apache.org/licenses/LICENSE-2.0.txt',

        'Export-Package': [
            'io.gambusia.mqtt',
            'io.gambusia.mqtt.handler',
            'io.gambusia.mqtt.handler.promise',
            'io.gambusia.netty.util',
            'io.gambusia.netty.util.concurrent',
        ].join(','),
    )
}


task sourcesJar(type: Jar, dependsOn: classes) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            from components.java
            artifact sourcesJar
            pom {
                name = title
                description = project.description
                url = 'https://github.com/r16turbo/gambusia'
                inceptionYear = '2018'
                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                scm {
                    url = 'https://github.com/r16turbo/gambusia'
                    connection = 'scm:git:https://github.com/r16turbo/gambusia.git'
                    developerConnection = 'scm:git:git@github.com:r16turbo/gambusia.git'
                }
                developers {
                    developer {
                        id = 'r16turbo'
                        name = 'Issey Yamakoshi'
                    }
                }
                issueManagement {
                    system = 'GitHub Issues'
                    url = 'https://github.com/r16turbo/gambusia/issues'
                }
            }
        }
    }
    repositories {
        maven {
            url "file:$rootDir/../maven"
        }
    }
}
