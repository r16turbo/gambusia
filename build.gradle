/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'osgi'

ext.title = 'Gambusia/MQTT'
group = 'io.gambusia'
version = '0.9.1-SNAPSHOT'

description = 'Netty-based MQTT v3.1.1 lightweight client'

tasks.withType(JavaCompile) {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = 'UTF-8'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

buildscript {
    repositories {
        // Use jcenter for resolving your dependencies.
        // You can declare any Maven/Ivy/file repository here.
        jcenter()
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'io.netty:netty-codec-mqtt:4.1.13.Final'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'org.apache.logging.log4j:log4j-api:2.11.0'
    testImplementation 'io.netty:netty-handler:4.1.13.Final'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.1.0'
    testRuntimeOnly 'org.apache.logging.log4j:log4j-core:2.11.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
}

test {
    useJUnitPlatform()
    exclude 'io/gambusia/**'
    // testLogging.showStandardStreams = true
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jar {
    manifest {
        instruction 'Implementation-Title', title
        instruction 'Implementation-Version', version
        instruction 'Implementation-Vendor', 'Issey Yamakoshi'
        instruction 'Automatic-Module-Name', 'io.gambusia.mqtt'

        description project.description
        docURL 'https://github.com/r16turbo/gambusia'
        license 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            from components.java
            artifact sourcesJar
            pom {
                name = title
                description = project.description
                url = 'https://github.com/r16turbo/gambusia'
                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                scm {
                    url = 'https://github.com/r16turbo/gambusia'
                    connection = 'scm:git:https://github.com/r16turbo/gambusia.git'
                    developerConnection = 'scm:git:git@github.com:r16turbo/gambusia.git'
                }
                developers {
                    developer {
                        id = 'r16turbo'
                        name = 'Issey Yamakoshi'
                    }
                }
                issueManagement {
                    system = 'GitHub Issues'
                    url = 'https://github.com/r16turbo/gambusia/issues'
                }
            }
        }
    }
    repositories {
        maven {
            url "file:$rootDir/../maven"
        }
    }
}
